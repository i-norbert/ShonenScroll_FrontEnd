{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nones\\\\Documents\\\\GitHub\\\\ShonenScroll_FrontEnd\\\\src\\\\pages\\\\ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { UserContext } from \"../UserContext\";\nimport \"./ChatPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // current user's ID from /chat/:id\n  const {\n    user\n  } = useContext(UserContext);\n  const [chats, setChats] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:5000/messages/chats/${id}`).then(res => res.json()).then(setChats).catch(err => console.error(\"Failed to fetch chats\", err));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-inbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), chats.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No messages yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"chat-list\",\n      children: chats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"chat-list-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/chat/${chat.user.userid}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: chat.user.profilePicture,\n            alt: \"profile\",\n            className: \"chat-profile-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-username\",\n              children: chat.user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-last-message\",\n              children: chat.lastMessage.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-time\",\n            children: new Date(chat.lastMessage.timestamp).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPage, \"3Hqth3kHvgjLABCFlpIB/YKNkIg=\", false, function () {\n  return [useParams];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Link","useParams","UserContext","jsxDEV","_jsxDEV","ChatPage","_s","id","user","chats","setChats","fetch","then","res","json","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","chat","index","to","userid","src","profilePicture","alt","username","lastMessage","content","Date","timestamp","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["C:/Users/nones/Documents/GitHub/ShonenScroll_FrontEnd/src/pages/ChatPage.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport \"./ChatPage.css\";\r\n\r\nconst ChatPage = () => {\r\n    const { id } = useParams(); // current user's ID from /chat/:id\r\n    const { user } = useContext(UserContext);\r\n    const [chats, setChats] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5000/messages/chats/${id}`)\r\n            .then(res => res.json())\r\n            .then(setChats)\r\n            .catch(err => console.error(\"Failed to fetch chats\", err));\r\n    }, [id]);\r\n\r\n    return (\r\n        <div className=\"chat-inbox-container\">\r\n            <h2>Your Messages</h2>\r\n            {chats.length === 0 ? (\r\n                <p>No messages yet!</p>\r\n            ) : (\r\n                <ul className=\"chat-list\">\r\n                    {chats.map((chat, index) => (\r\n                        <li key={index} className=\"chat-list-item\">\r\n                            <Link to={`/chat/${chat.user.userid}`}>\r\n                                <img\r\n                                    src={chat.user.profilePicture}\r\n                                    alt=\"profile\"\r\n                                    className=\"chat-profile-pic\"\r\n                                />\r\n                                <div className=\"chat-info\">\r\n                                    <span className=\"chat-username\">{chat.user.username}</span>\r\n                                    <span className=\"chat-last-message\">{chat.lastMessage.content}</span>\r\n                                </div>\r\n                                <span className=\"chat-time\">\r\n                                    {new Date(chat.lastMessage.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}