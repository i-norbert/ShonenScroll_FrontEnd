{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Documents\\\\VizsgaRemek\\\\ShonenScroll_FrontEnd\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.css\";\nimport mangaReading from \"./MangaReading\"; // Ensure you create and import this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [mangas, setMangas] = useState([]); // To hold fetched mangas\n  const [loading, setLoading] = useState(true); // To track loading state\n  const [error, setError] = useState(\"\"); // To track errors\n\n  // Fetch random mangas from an API or mock database\n  useEffect(() => {\n    const fetchMangas = async () => {\n      try {\n        const response = await fetch(\"http://10.30.108.3:5000/manga\"); // Replace with your API URL\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n        const data = await response.json();\n        setMangas(data); // Assuming 'data' contains an array of manga objects\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchMangas();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading random mangas...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: \"ShonenScrolls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"home-description\",\n      children: \"Dive into the world of manga!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manga-list\",\n      children: mangas.slice(0, 10).map(manga => /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/reading/\" + manga.id,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manga-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://10.30.108.3:5000\" + manga.coverImage,\n            alt: manga.title,\n            className: \"manga-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"manga-title\",\n            children: manga.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, manga.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/reading\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"home-button\",\n        variant: \"contained\",\n        children: \"Start Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"3wClPvsmEp9aTjAFPoehUTjjmYA=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Button","Link","mangaReading","jsxDEV","_jsxDEV","Home","_s","mangas","setMangas","loading","setLoading","error","setError","fetchMangas","response","fetch","ok","Error","data","json","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","manga","to","id","src","coverImage","alt","title","variant","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Documents/VizsgaRemek/ShonenScroll_FrontEnd/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nimport mangaReading from \"./MangaReading\"; // Ensure you create and import this CSS file\r\n\r\nconst Home = () => {\r\n    const [mangas, setMangas] = useState([]); // To hold fetched mangas\r\n    const [loading, setLoading] = useState(true); // To track loading state\r\n    const [error, setError] = useState(\"\"); // To track errors\r\n\r\n    // Fetch random mangas from an API or mock database\r\n    useEffect(() => {\r\n        const fetchMangas = async () => {\r\n            try {\r\n                const response = await fetch(\"http://10.30.108.3:5000/manga\"); // Replace with your API URL\r\n                if (!response.ok) {\r\n                    throw new Error(\"Failed to fetch data\");\r\n                }\r\n                const data = await response.json();\r\n                setMangas(data); // Assuming 'data' contains an array of manga objects\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError(err.message);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchMangas();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div className=\"loading\">Loading random mangas...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"error\">Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1 className=\"home-title\">ShonenScrolls</h1>\r\n            <p className=\"home-description\">Dive into the world of manga!</p>\r\n\r\n            <div className=\"manga-list\">\r\n                {mangas.slice(0, 10).map((manga) => (\r\n                    <Link to={\"/reading/\"+manga.id}>\r\n                    <div key={manga.id} className=\"manga-card\">\r\n                        <img src={\"http://10.30.108.3:5000\"+manga.coverImage} alt={manga.title} className=\"manga-cover\" />\r\n                        <h3 className=\"manga-title\">{manga.title}</h3>\r\n                    </div>\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n\r\n            <Link to=\"/reading\" >\r\n                <Button className=\"home-button\" variant=\"contained\">\r\n                    Start Reading\r\n                </Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}