{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Documents\\\\VizsgaRemek\\\\ShonenScroll_FrontEnd\\\\src\\\\pages\\\\MangaReading.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./MangaPage.css\";\nimport { useParams } from \"react-router-dom\";\nimport { responsiveFontSizes } from \"@mui/material\"; // Make sure to create and style your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MangaPage = () => {\n  _s();\n  const [currentChapter, setCurrentChapter] = useState(0);\n  const [pages, setPages] = useState([]); // To hold fetched mangas\n  const [loading, setLoading] = useState(true); // To track loading state\n  const [error, setError] = useState(\"\"); // To track errors\n  const {\n    id\n  } = useParams();\n  const fetchMangas = async () => {\n    try {\n      const response = await fetch(\"http://10.30.108.3:5000/manga/\" + id); // Replace with your API URL\n      console.log(response);\n      if (response.status !== 200) {\n        throw new Error(\"Failed to fetch data\");\n      }\n      const data = await response.json();\n      setPages(data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const mangaPages = pages.Chapters[currentChapter].Pages;\n\n  // State for the current page\n  const [currentPage, setCurrentPage] = useState(0);\n\n  // Function to go to the next page\n  const nextPage = () => {\n    if (currentPage < mangaPages.length - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  // Function to go to the previous page\n  const prevPage = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manga-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manga-page-content\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mangaPages[currentPage].imageUrl,\n        alt: `Manga Page ${currentPage + 1}`,\n        className: \"manga-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manga-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        disabled: currentPage === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `Page ${currentPage + 1} of ${mangaPages.length}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        disabled: currentPage === mangaPages.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(MangaPage, \"Sm81AaDv1820uHbWmUXm4Nklw2Y=\", false, function () {\n  return [useParams];\n});\n_c = MangaPage;\nexport default MangaPage;\nvar _c;\n$RefreshReg$(_c, \"MangaPage\");","map":{"version":3,"names":["React","useState","useParams","responsiveFontSizes","jsxDEV","_jsxDEV","MangaPage","_s","currentChapter","setCurrentChapter","pages","setPages","loading","setLoading","error","setError","id","fetchMangas","response","fetch","console","log","status","Error","data","json","err","message","mangaPages","Chapters","Pages","currentPage","setCurrentPage","nextPage","length","prevPage","className","children","src","imageUrl","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Documents/VizsgaRemek/ShonenScroll_FrontEnd/src/pages/MangaReading.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./MangaPage.css\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {responsiveFontSizes} from \"@mui/material\"; // Make sure to create and style your CSS file\r\n\r\nconst MangaPage = () => {\r\n    const [currentChapter, setCurrentChapter] = useState(0);\r\n    const [pages, setPages] = useState([]); // To hold fetched mangas\r\n    const [loading, setLoading] = useState(true); // To track loading state\r\n    const [error, setError] = useState(\"\"); // To track errors\r\n    const {id} = useParams();\r\n    const fetchMangas = async () => {\r\n        try {\r\n            const response = await fetch(\"http://10.30.108.3:5000/manga/\" + id); // Replace with your API URL\r\n            console.log(response)\r\n            if (response.status !== 200 ) {\r\n\r\n                throw new Error(\"Failed to fetch data\");\r\n            }\r\n            const data = await response.json();\r\n            setPages(data);\r\n\r\n            setLoading(false);\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const mangaPages = pages.Chapters[currentChapter].Pages;\r\n\r\n    // State for the current page\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n\r\n    // Function to go to the next page\r\n    const nextPage = () => {\r\n        if (currentPage < mangaPages.length - 1) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    // Function to go to the previous page\r\n    const prevPage = () => {\r\n        if (currentPage > 0) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"manga-page-container\">\r\n            <div className=\"manga-page-content\">\r\n                <img\r\n                    src={mangaPages[currentPage].imageUrl}\r\n                    alt={`Manga Page ${currentPage + 1}`}\r\n                    className=\"manga-image\"\r\n                />\r\n            </div>\r\n            <div className=\"manga-navigation\">\r\n                <button onClick={prevPage} disabled={currentPage === 0}>\r\n                    Previous\r\n                </button>\r\n                <span>{`Page ${currentPage + 1} of ${mangaPages.length}`}</span>\r\n                <button onClick={nextPage} disabled={currentPage === mangaPages.length - 1}>\r\n                    Next\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MangaPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}