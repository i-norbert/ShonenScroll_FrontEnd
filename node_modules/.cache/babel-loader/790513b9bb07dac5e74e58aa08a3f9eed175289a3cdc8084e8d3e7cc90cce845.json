{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nones\\\\Documents\\\\GitHub\\\\ShonenScroll_FrontEnd\\\\src\\\\pages\\\\ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../UserContext\";\nimport \"./ChatPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    user\n  } = useContext(UserContext);\n  const [chats, setChats] = useState([]);\n  const [friends, setFriends] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(`http://localhost:5000/messages/chats/${user.userid}`).then(res => res.json()).then(setChats);\n    fetch(`http://localhost:5000/friends/list/${user.userid}`).then(res => res.json()).then(setFriends);\n  }, [id, user.userid]);\n  const startChat = async friendId => {\n    try {\n      await fetch(\"http://localhost:5000/messages/start\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          senderId: user.userid,\n          receiverId: friendId\n        })\n      });\n      navigate(`/chat/${friendId}`);\n    } catch (err) {\n      console.error(\"Error starting chat:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-inbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-message-btn\",\n        onClick: () => setShowDropdown(!showDropdown),\n        title: \"New Message\",\n        children: \"\\uFF0B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friends-dropdown\",\n        children: friends.map(friend => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: () => startChat(friend.userid),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: friend.profilePicture,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), friend.username]\n        }, friend.userid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), chats.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No messages yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"chat-list\",\n      children: chats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"chat-list-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/chat/${chat.user.userid}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: chat.user.profilePicture,\n            alt: \"profile\",\n            className: \"chat-profile-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-username\",\n              children: chat.user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-last-message\",\n              children: chat.lastMessage.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-time\",\n            children: new Date(chat.lastMessage.timestamp).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPage, \"109uh74AMFAGfsiG9gpL8jn/SQM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Link","useParams","useNavigate","UserContext","jsxDEV","_jsxDEV","ChatPage","_s","id","user","chats","setChats","friends","setFriends","showDropdown","setShowDropdown","navigate","fetch","userid","then","res","json","startChat","friendId","method","headers","body","JSON","stringify","senderId","receiverId","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","map","friend","src","profilePicture","alt","username","length","chat","index","to","lastMessage","content","Date","timestamp","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["C:/Users/nones/Documents/GitHub/ShonenScroll_FrontEnd/src/pages/ChatPage.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport \"./ChatPage.css\";\r\n\r\nconst ChatPage = () => {\r\n    const { id } = useParams();\r\n    const { user } = useContext(UserContext);\r\n    const [chats, setChats] = useState([]);\r\n    const [friends, setFriends] = useState([]);\r\n    const [showDropdown, setShowDropdown] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5000/messages/chats/${user.userid}`)\r\n            .then(res => res.json())\r\n            .then(setChats);\r\n\r\n        fetch(`http://localhost:5000/friends/list/${user.userid}`)\r\n            .then(res => res.json())\r\n            .then(setFriends);\r\n    }, [id, user.userid]);\r\n\r\n    const startChat = async (friendId) => {\r\n        try {\r\n            await fetch(\"http://localhost:5000/messages/start\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    senderId: user.userid,\r\n                    receiverId: friendId,\r\n                }),\r\n            });\r\n\r\n            navigate(`/chat/${friendId}`);\r\n        } catch (err) {\r\n            console.error(\"Error starting chat:\", err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-inbox-container\">\r\n            <div className=\"chat-header\">\r\n                <h2>Your Messages</h2>\r\n                <button\r\n                    className=\"new-message-btn\"\r\n                    onClick={() => setShowDropdown(!showDropdown)}\r\n                    title=\"New Message\"\r\n                >\r\n                    ï¼‹\r\n                </button>\r\n                {showDropdown && (\r\n                    <div className=\"friends-dropdown\">\r\n                        {friends.map(friend => (\r\n                            <div\r\n                                key={friend.userid}\r\n                                className=\"dropdown-item\"\r\n                                onClick={() => startChat(friend.userid)}\r\n                            >\r\n                                <img src={friend.profilePicture} alt=\"\" />\r\n                                {friend.username}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {chats.length === 0 ? (\r\n                <p>No messages yet!</p>\r\n            ) : (\r\n                <ul className=\"chat-list\">\r\n                    {chats.map((chat, index) => (\r\n                        <li key={index} className=\"chat-list-item\">\r\n                            <Link to={`/chat/${chat.user.userid}`}>\r\n                                <img\r\n                                    src={chat.user.profilePicture}\r\n                                    alt=\"profile\"\r\n                                    className=\"chat-profile-pic\"\r\n                                />\r\n                                <div className=\"chat-info\">\r\n                                    <span className=\"chat-username\">{chat.user.username}</span>\r\n                                    <span className=\"chat-last-message\">{chat.lastMessage.content}</span>\r\n                                </div>\r\n                                <span className=\"chat-time\">\r\n                                    {new Date(chat.lastMessage.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}