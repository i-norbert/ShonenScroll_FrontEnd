{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nones\\\\Documents\\\\GitHub\\\\ShonenScroll_FrontEnd\\\\src\\\\pages\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { UserContext } from \"../UserContext\";\nimport \"./ChatWindow.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const {\n    id: friendId\n  } = useParams();\n  const {\n    user\n  } = useContext(UserContext);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [friend, setFriend] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (!user) return;\n    fetch(`http://localhost:5000/messages/conversation/${user.userid}/${friendId}`).then(res => res.json()).then(setMessages);\n    fetch(`http://localhost:5000/auth/users/${friendId}`).then(res => res.json()).then(setFriend);\n  }, [user, friendId]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    const res = await fetch(\"http://localhost:5000/messages\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        senderId: user.userid,\n        receiverId: parseInt(friendId),\n        content: newMessage\n      })\n    });\n    const msg = await res.json();\n    setMessages(prev => [...prev, msg]);\n    setNewMessage(\"\");\n  };\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const getSenderData = msg => {\n    return msg.senderId === user.userid ? user : friend;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header-bar\",\n      children: friend && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: friend.profilePicture,\n          alt: \"friend\",\n          className: \"chat-header-pfp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: friend.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map(msg => {\n        const sender = getSenderData(msg);\n        const isSent = msg.senderId === user.userid;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-row ${isSent ? \"sent\" : \"received\"}`,\n          children: [!isSent && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sender.profilePicture,\n            alt: \"pfp\",\n            className: \"message-pfp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: new Date(msg.timestamp).toLocaleString([], {\n                hour: '2-digit',\n                minute: '2-digit',\n                hour12: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), isSent && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sender.profilePicture,\n            alt: \"pfp\",\n            className: \"message-pfp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)]\n        }, msg.messageid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatWindow, \"MqxzG/3qyMlWGMkof+Prjukobas=\", false, function () {\n  return [useParams];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","useParams","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","_s","id","friendId","user","messages","setMessages","newMessage","setNewMessage","friend","setFriend","messagesEndRef","fetch","userid","then","res","json","sendMessage","e","preventDefault","trim","method","headers","body","JSON","stringify","senderId","receiverId","parseInt","content","msg","prev","_messagesEndRef$curre","current","scrollIntoView","behavior","getSenderData","className","children","src","profilePicture","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","map","sender","isSent","Date","timestamp","toLocaleString","hour","minute","hour12","messageid","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/nones/Documents/GitHub/ShonenScroll_FrontEnd/src/pages/ChatWindow.js"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport \"./ChatWindow.css\";\r\n\r\nconst ChatWindow = () => {\r\n    const { id: friendId } = useParams();\r\n    const { user } = useContext(UserContext);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const [friend, setFriend] = useState(null);\r\n    const messagesEndRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!user) return;\r\n\r\n        fetch(`http://localhost:5000/messages/conversation/${user.userid}/${friendId}`)\r\n            .then(res => res.json())\r\n            .then(setMessages);\r\n\r\n        fetch(`http://localhost:5000/auth/users/${friendId}`)\r\n            .then(res => res.json())\r\n            .then(setFriend);\r\n    }, [user, friendId]);\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (!newMessage.trim()) return;\r\n\r\n        const res = await fetch(\"http://localhost:5000/messages\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                senderId: user.userid,\r\n                receiverId: parseInt(friendId),\r\n                content: newMessage\r\n            }),\r\n        });\r\n\r\n        const msg = await res.json();\r\n        setMessages((prev) => [...prev, msg]);\r\n        setNewMessage(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    const getSenderData = (msg) => {\r\n        return msg.senderId === user.userid ? user : friend;\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-window\">\r\n            <div className=\"chat-header-bar\">\r\n                {friend && (\r\n                    <>\r\n                        <img src={friend.profilePicture} alt=\"friend\" className=\"chat-header-pfp\" />\r\n                        <h3>{friend.username}</h3>\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"chat-messages\">\r\n                {messages.map((msg) => {\r\n                    const sender = getSenderData(msg);\r\n                    const isSent = msg.senderId === user.userid;\r\n\r\n                    return (\r\n                        <div key={msg.messageid} className={`message-row ${isSent ? \"sent\" : \"received\"}`}>\r\n                            {!isSent && (\r\n                                <img src={sender.profilePicture} alt=\"pfp\" className=\"message-pfp\" />\r\n                            )}\r\n                            <div className=\"message-bubble\">\r\n                                <div className=\"message-content\">{msg.content}</div>\r\n                                <div className=\"message-time\">\r\n                                    {new Date(msg.timestamp).toLocaleString([], {\r\n                                        hour: '2-digit',\r\n                                        minute: '2-digit',\r\n                                        hour12: true,\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                            {isSent && (\r\n                                <img src={sender.profilePicture} alt=\"pfp\" className=\"message-pfp\" />\r\n                            )}\r\n                        </div>\r\n                    );\r\n                })}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n\r\n            <form onSubmit={sendMessage} className=\"message-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                    className=\"message-input\"\r\n                />\r\n                <button type=\"submit\" className=\"send-button\">Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}