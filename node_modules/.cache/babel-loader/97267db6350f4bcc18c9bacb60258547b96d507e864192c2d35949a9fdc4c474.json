{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Documents\\\\VizsgaRemek\\\\ShonenScroll_FrontEnd\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./reglogin.css\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"https://shonenscroll-backend.onrender.com\";\nexport default function Register() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const handleRegister = async () => {\n    setError(\"\");\n    setSuccess(\"\");\n    try {\n      const response = await fetch(`${API_BASE}/auth/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || \"Registration failed\");\n      }\n      setSuccess(\"User registered successfully!\");\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: \"textfield\",\n      label: \"Username\",\n      variant: \"standard\",\n      color: \"secondary\",\n      sx: {\n        input: {\n          color: \"white\"\n        }\n      },\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: \"textfield\",\n      label: \"Email\",\n      variant: \"standard\",\n      color: \"secondary\",\n      sx: {\n        input: {\n          color: \"white\"\n        }\n      },\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: \"textfield\",\n      label: \"Password\",\n      type: \"password\",\n      autoComplete: \"current-password\",\n      variant: \"standard\",\n      color: \"secondary\",\n      sx: {\n        input: {\n          color: \"white\"\n        }\n      },\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"success\",\n      sx: {\n        ml: 30\n      },\n      onClick: handleRegister,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"og3S02aDiIeSvLXaCyRWVju1+cI=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","TextField","Button","jsxDEV","_jsxDEV","API_BASE","Register","_s","username","setUsername","email","setEmail","password","setPassword","error","setError","success","setSuccess","handleRegister","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","color","sx","input","value","onChange","e","target","type","autoComplete","ml","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Documents/VizsgaRemek/ShonenScroll_FrontEnd/src/pages/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./reglogin.css\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst API_BASE = \"https://shonenscroll-backend.onrender.com\";\r\n\r\nexport default function Register() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n\r\n    const handleRegister = async () => {\r\n        setError(\"\");\r\n        setSuccess(\"\");\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE}/auth/register`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ username, email, password }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || \"Registration failed\");\r\n            }\r\n\r\n            setSuccess(\"User registered successfully!\");\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"Container\">\r\n            <h2>Register</h2>\r\n            <br />\r\n            {error && <p className=\"error\">{error}</p>}\r\n            {success && <p className=\"success\">{success}</p>}\r\n\r\n            <TextField\r\n                className=\"textfield\"\r\n                label=\"Username\"\r\n                variant=\"standard\"\r\n                color=\"secondary\"\r\n                sx={{ input: { color: \"white\" } }}\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <br />\r\n            <TextField\r\n                className=\"textfield\"\r\n                label=\"Email\"\r\n                variant=\"standard\"\r\n                color=\"secondary\"\r\n                sx={{ input: { color: \"white\" } }}\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <br />\r\n            <TextField\r\n                className=\"textfield\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"standard\"\r\n                color=\"secondary\"\r\n                sx={{ input: { color: \"white\" } }}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <br />\r\n            <Button variant=\"contained\" color=\"success\" sx={{ ml: 30 }} onClick={handleRegister}>\r\n                Register\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAG,2CAA2C;AAE5D,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMkB,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/BH,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IAEd,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGf,QAAQ,gBAAgB,EAAE;QACtDgB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEjB,QAAQ;UAAEE,KAAK;UAAEE;QAAS,CAAC;MACtD,CAAC,CAAC;MAEF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,qBAAqB,CAAC;MAC1D;MAEAb,UAAU,CAAC,+BAA+B,CAAC;IAC/C,CAAC,CAAC,OAAOc,GAAG,EAAE;MACVhB,QAAQ,CAACgB,GAAG,CAACD,OAAO,CAAC;IACzB;EACJ,CAAC;EAED,oBACI1B,OAAA;IAAK4B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB7B,OAAA;MAAA6B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBjC,OAAA;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLvB,KAAK,iBAAIV,OAAA;MAAG4B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzCrB,OAAO,iBAAIZ,OAAA;MAAG4B,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEjB;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhDjC,OAAA,CAACH,SAAS;MACN+B,SAAS,EAAC,WAAW;MACrBM,KAAK,EAAC,UAAU;MAChBC,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAC,WAAW;MACjBC,EAAE,EAAE;QAAEC,KAAK,EAAE;UAAEF,KAAK,EAAE;QAAQ;MAAE,CAAE;MAClCG,KAAK,EAAEnC,QAAS;MAChBoC,QAAQ,EAAGC,CAAC,IAAKpC,WAAW,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFjC,OAAA;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNjC,OAAA,CAACH,SAAS;MACN+B,SAAS,EAAC,WAAW;MACrBM,KAAK,EAAC,OAAO;MACbC,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAC,WAAW;MACjBC,EAAE,EAAE;QAAEC,KAAK,EAAE;UAAEF,KAAK,EAAE;QAAQ;MAAE,CAAE;MAClCG,KAAK,EAAEjC,KAAM;MACbkC,QAAQ,EAAGC,CAAC,IAAKlC,QAAQ,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFjC,OAAA;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNjC,OAAA,CAACH,SAAS;MACN+B,SAAS,EAAC,WAAW;MACrBM,KAAK,EAAC,UAAU;MAChBS,IAAI,EAAC,UAAU;MACfC,YAAY,EAAC,kBAAkB;MAC/BT,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAC,WAAW;MACjBC,EAAE,EAAE;QAAEC,KAAK,EAAE;UAAEF,KAAK,EAAE;QAAQ;MAAE,CAAE;MAClCG,KAAK,EAAE/B,QAAS;MAChBgC,QAAQ,EAAGC,CAAC,IAAKhC,WAAW,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFjC,OAAA;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNjC,OAAA,CAACF,MAAM;MAACqC,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAACC,EAAE,EAAE;QAAEQ,EAAE,EAAE;MAAG,CAAE;MAACC,OAAO,EAAEhC,cAAe;MAAAe,QAAA,EAAC;IAErF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAAC9B,EAAA,CA5EuBD,QAAQ;AAAA6C,EAAA,GAAR7C,QAAQ;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}