{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nones\\\\Documents\\\\GitHub\\\\ShonenScroll_FrontEnd\\\\src\\\\pages\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { UserContext } from \"../UserContext\";\nimport \"./ChatWindow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const {\n    id: friendId\n  } = useParams();\n  const {\n    user\n  } = useContext(UserContext);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (!user) return;\n    fetch(`http://localhost:5000/messages/conversation/${user.userid}/${friendId}`).then(res => res.json()).then(setMessages);\n  }, [user, friendId]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    const res = await fetch(\"http://localhost:5000/messages\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        senderId: user.userid,\n        receiverId: parseInt(friendId),\n        content: newMessage\n      })\n    });\n    const msg = await res.json();\n    setMessages(prev => [...prev, msg]);\n    setNewMessage(\"\");\n  };\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map(msg => {\n        const isSent = msg.senderId === user.userid;\n        const timestamp = new Date(msg.timestamp).toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n        const profilePic = isSent ? user.profilePicture : friend && friend.profilePicture;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-row ${isSent ? \"sent-row\" : \"received-row\"}`,\n          children: [!isSent && profilePic && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profilePic,\n            alt: \"friend\",\n            className: \"chat-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-bubble ${isSent ? \"sent\" : \"received\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-timestamp\",\n              children: timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), isSent && profilePic && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profilePic,\n            alt: \"me\",\n            className: \"chat-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this)]\n        }, msg.messageid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatWindow, \"zCQHY9SKM45aBytea6jJlQI/QfE=\", false, function () {\n  return [useParams];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","useParams","UserContext","jsxDEV","_jsxDEV","ChatWindow","_s","id","friendId","user","messages","setMessages","newMessage","setNewMessage","messagesEndRef","fetch","userid","then","res","json","sendMessage","e","preventDefault","trim","method","headers","body","JSON","stringify","senderId","receiverId","parseInt","content","msg","prev","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","map","isSent","timestamp","Date","toLocaleTimeString","hour","minute","profilePic","profilePicture","friend","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","messageid","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/nones/Documents/GitHub/ShonenScroll_FrontEnd/src/pages/ChatWindow.js"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport \"./ChatWindow.css\";\r\n\r\nconst ChatWindow = () => {\r\n    const { id: friendId } = useParams();\r\n    const { user } = useContext(UserContext);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const messagesEndRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!user) return;\r\n\r\n        fetch(`http://localhost:5000/messages/conversation/${user.userid}/${friendId}`)\r\n            .then(res => res.json())\r\n            .then(setMessages);\r\n    }, [user, friendId]);\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (!newMessage.trim()) return;\r\n\r\n        const res = await fetch(\"http://localhost:5000/messages\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                senderId: user.userid,\r\n                receiverId: parseInt(friendId),\r\n                content: newMessage\r\n            }),\r\n        });\r\n\r\n        const msg = await res.json();\r\n        setMessages((prev) => [...prev, msg]);\r\n        setNewMessage(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    return (\r\n        <div className=\"chat-window\">\r\n            <div className=\"chat-messages\">\r\n                {messages.map((msg) => {\r\n                    const isSent = msg.senderId === user.userid;\r\n                    const timestamp = new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n                    const profilePic = isSent ? user.profilePicture : (friend && friend.profilePicture);\r\n\r\n                    return (\r\n                        <div key={msg.messageid} className={`message-row ${isSent ? \"sent-row\" : \"received-row\"}`}>\r\n                            {!isSent && profilePic && (\r\n                                <img src={profilePic} alt=\"friend\" className=\"chat-avatar\" />\r\n                            )}\r\n                            <div className={`message-bubble ${isSent ? \"sent\" : \"received\"}`}>\r\n                                <div className=\"message-content\">{msg.content}</div>\r\n                                <div className=\"message-timestamp\">{timestamp}</div>\r\n                            </div>\r\n                            {isSent && profilePic && (\r\n                                <img src={profilePic} alt=\"me\" className=\"chat-avatar\" />\r\n                            )}\r\n                        </div>\r\n                    );\r\n                })}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n            <form onSubmit={sendMessage} className=\"message-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                    className=\"message-input\"\r\n                />\r\n                <button type=\"submit\" className=\"send-button\">Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}